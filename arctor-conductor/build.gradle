apply plugin: 'com.android.library'
apply plugin: 'com.novoda.bintray-release'

publish {
    userOrg = 'alapshin'
    groupId = GROUP_ID
    artifactId = 'arctor-conductor'
    publishVersion = PUBLISH_VERSION
    desc = 'Android MVP library'
    website = 'https://github.com/alapshin/arctor'
}

android {
    compileSdkVersion versions.compileSdk
    buildToolsVersion versions.buildTools

    defaultConfig {
        minSdkVersion versions.minSdk16 // Conductor minSdkVersion is 16
        targetSdkVersion versions.targetSdk
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        // Common code for JVM tests lives in src/jvmTestsCommon.
        test.java.srcDirs += 'src/jvmTestCommon/java'

        // Unit tests live in src/unitTest.
        test.java.srcDirs += 'src/unitTest/java'
        test.resources.srcDirs += 'src/unitTest/resources'

        // Integration tests live in src/integrationTest.
        test.java.srcDirs += 'src/integrationTest/java'

        // Unit tests for debug build type specific code live in src/debugUnitTest.
        testDebug.java.srcDirs += 'src/debugUnitTest/java'

        // Unit tests for release build type specific code live in src/releaseUnitTest.
        testRelease.java.srcDirs += 'src/releaseUnitTest/java'

        // Functional tests live in src/functionalTests.
        androidTest.java.srcDirs  += 'src/functionalTest/java'
    }

    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
            exceptionFormat 'full'
            showStandardStreams = true
        }
    }
}

dependencies {
    compile libraries.arctor
    compile libraries.conductor
    compile libraries.jsr330

    testCompile libraries.junit
}
